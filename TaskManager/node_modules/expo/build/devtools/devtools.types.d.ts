import type { WebSocketBackingStore } from './WebSocketBackingStore';
/**
 * The connection info for devtools plugins client.
 */
export interface ConnectionInfo {
    /** Indicates the sender towards the devtools plugin. */
    sender: 'app' | 'browser';
    /** Dev server address. */
    devServer: string;
    /** The plugin name. */
    pluginName: string;
    /**
     * The backing store for the WebSocket connection. Exposed for testing.
     * If not provided, the default singleton instance will be used.
     * @hidden
     */
    wsStore?: WebSocketBackingStore;
<<<<<<< HEAD
    /**
     * The transport protocol version between the app and the webui.
     */
    protocolVersion: number;
=======
}
/**
 * Parameters for the `handshake` message.
 * @hidden
 */
export interface HandshakeMessageParams {
    browserClientId: string;
    pluginName: string;
>>>>>>> 0823204efb84884a0322b43e865bb36631ba8251
}
/**
 * Options for the devtools plugin client.
 */
export interface DevToolsPluginClientOptions {
    /**
     * The underlying WebSocket [`binaryType`](https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/binaryType).
     */
    websocketBinaryType?: 'arraybuffer' | 'blob';
<<<<<<< HEAD
}
/**
 * The handshake messages for the devtools plugin client.
 * @hidden
 */
export interface HandshakeMessageParams {
    protocolVersion: number;
    pluginName: string;
    method: 'handshake' | 'terminateBrowserClient';
    browserClientId: string;
=======
    /**
     * Whether to use the new transportation protocol.
     */
    useTransportationNext?: boolean;
>>>>>>> 0823204efb84884a0322b43e865bb36631ba8251
}
//# sourceMappingURL=devtools.types.d.ts.map