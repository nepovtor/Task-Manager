<<<<<<< HEAD
import './sweet/setUpErrorManager.fx';
import './web';
export type * from './ts-declarations/global';
export { default as NativeModule } from './NativeModule';
export { default as SharedObject } from './SharedObject';
export { default as SharedRef } from './SharedRef';
export { default as Platform } from './Platform';
export { default as uuid } from './uuid';
export { default as EventEmitter, type EventSubscription } from './EventEmitter';
export type { ProxyNativeModule } from './NativeModulesProxy.types';
export { requireNativeViewManager } from './NativeViewManagerAdapter';
export * from './requireNativeModule';
export * from './registerWebModule';
export * from './TypedArrays.types';
=======
import { DeviceEventEmitter } from 'react-native';
import { EventEmitter, Subscription } from './EventEmitter';
import NativeModule from './NativeModule';
import NativeModulesProxy from './NativeModulesProxy';
import { ProxyNativeModule } from './NativeModulesProxy.types';
import { requireNativeViewManager } from './NativeViewManagerAdapter';
import Platform from './Platform';
import SharedObject from './SharedObject';
import { CodedError } from './errors/CodedError';
import { UnavailabilityError } from './errors/UnavailabilityError';
import './sweet/setUpErrorManager.fx';
import './web/index';
export type * from './ts-declarations/global';
export { default as uuid } from './uuid';
export { DeviceEventEmitter, EventEmitter, NativeModulesProxy, ProxyNativeModule, Platform, Subscription, requireNativeViewManager, SharedObject, NativeModule, CodedError, UnavailabilityError, };
export * from './requireNativeModule';
export * from './createWebModule';
export * from './TypedArrays.types';
/**
 * @deprecated renamed to `DeviceEventEmitter`
 */
export declare const SyntheticPlatformEmitter: import("react-native").DeviceEventEmitterStatic;
>>>>>>> 0823204efb84884a0322b43e865bb36631ba8251
export * from './PermissionsInterface';
export * from './PermissionsHook';
export * from './Refs';
export * from './hooks/useReleasingSharedObject';
export * from './reload';
<<<<<<< HEAD
export { CodedError } from './errors/CodedError';
export { UnavailabilityError } from './errors/UnavailabilityError';
export { LegacyEventEmitter } from './LegacyEventEmitter';
export { default as NativeModulesProxy } from './NativeModulesProxy';
=======
>>>>>>> 0823204efb84884a0322b43e865bb36631ba8251
//# sourceMappingURL=index.d.ts.map