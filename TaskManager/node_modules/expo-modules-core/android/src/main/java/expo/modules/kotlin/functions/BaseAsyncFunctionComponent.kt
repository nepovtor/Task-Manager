package expo.modules.kotlin.functions

<<<<<<< HEAD
import expo.modules.kotlin.types.AnyType
import kotlinx.coroutines.CoroutineScope

sealed interface FunctionQueue

enum class Queues : FunctionQueue {
=======
import com.facebook.react.bridge.ReadableArray
import expo.modules.kotlin.ModuleHolder
import expo.modules.kotlin.Promise
import expo.modules.kotlin.types.AnyType

enum class Queues {
>>>>>>> 0823204efb84884a0322b43e865bb36631ba8251
  MAIN,
  DEFAULT
}

<<<<<<< HEAD
data class CustomQueue(
  val scope: CoroutineScope
) : FunctionQueue

=======
>>>>>>> 0823204efb84884a0322b43e865bb36631ba8251
abstract class BaseAsyncFunctionComponent(
  name: String,
  desiredArgsTypes: Array<AnyType>
) : AnyFunction(name, desiredArgsTypes) {
<<<<<<< HEAD
  protected var queue: FunctionQueue = Queues.DEFAULT
=======

  protected var queue = Queues.DEFAULT

  abstract fun call(holder: ModuleHolder<*>, args: ReadableArray, promise: Promise)
>>>>>>> 0823204efb84884a0322b43e865bb36631ba8251

  fun runOnQueue(queue: Queues) = apply {
    this.queue = queue
  }
<<<<<<< HEAD

  fun runOnQueue(scope: CoroutineScope) = apply {
    this.queue = CustomQueue(scope)
  }
=======
>>>>>>> 0823204efb84884a0322b43e865bb36631ba8251
}
