package expo.modules.kotlin.functions

<<<<<<< HEAD
import expo.modules.kotlin.AppContext
import expo.modules.kotlin.Promise
=======
import com.facebook.react.bridge.ReadableArray
import expo.modules.kotlin.AppContext
import expo.modules.kotlin.Promise
import expo.modules.kotlin.exception.CodedException
>>>>>>> 0823204efb84884a0322b43e865bb36631ba8251
import expo.modules.kotlin.types.AnyType

class AsyncFunctionWithPromiseComponent(
  name: String,
  desiredArgsTypes: Array<AnyType>,
  private val body: (args: Array<out Any?>, promise: Promise) -> Unit
<<<<<<< HEAD
) : AsyncFunctionComponent(name, desiredArgsTypes) {
=======
) : AsyncFunction(name, desiredArgsTypes) {
  @Throws(CodedException::class)
  override fun callUserImplementation(args: ReadableArray, promise: Promise) {
    body(convertArgs(args), promise)
  }

>>>>>>> 0823204efb84884a0322b43e865bb36631ba8251
  override fun callUserImplementation(args: Array<Any?>, promise: Promise, appContext: AppContext) {
    body(convertArgs(args, appContext), promise)
  }
}
