import { getAssetByID } from '@react-native/assets-registry/registry';
import AssetSourceResolver from './AssetSourceResolver';
let _customSourceTransformer;
export function setCustomSourceTransformer(transformer) {
    _customSourceTransformer = transformer;
}
/**
 * `source` is either a number (opaque type returned by require('./foo.png'))
 * or an `ImageSource` like { uri: '<http location || file path>' }
 */
<<<<<<< HEAD
function resolveAssetSource(source) {
=======
export default function resolveAssetSource(source) {
>>>>>>> 0823204efb84884a0322b43e865bb36631ba8251
    if (typeof source === 'object') {
        return source;
    }
    const asset = getAssetByID(source);
    if (!asset) {
        return null;
    }
    const resolver = new AssetSourceResolver(
    // Doesn't matter since this is removed on web
    'https://expo.dev', null, asset);
    if (_customSourceTransformer) {
        return _customSourceTransformer(resolver);
    }
    return resolver.defaultAsset();
}
Object.defineProperty(resolveAssetSource, 'setCustomSourceTransformer', {
    get() {
        return setCustomSourceTransformer;
    },
});
<<<<<<< HEAD
export default resolveAssetSource;
=======
>>>>>>> 0823204efb84884a0322b43e865bb36631ba8251
export const { pickScale } = AssetSourceResolver;
//# sourceMappingURL=resolveAssetSource.js.map