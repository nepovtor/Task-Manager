"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "resolveArgsAsync", {
    enumerable: true,
<<<<<<< HEAD
    get: function() {
        return resolveArgsAsync;
    }
=======
    get: ()=>resolveArgsAsync
>>>>>>> 0823204efb84884a0322b43e865bb36631ba8251
});
const _errors = require("../utils/errors");
const _variadic = require("../utils/variadic");
function resolveOptions(options) {
    if (options.fix && options.check) {
<<<<<<< HEAD
        throw new _errors.CommandError('BAD_ARGS', 'Specify at most one of: --check, --fix');
=======
        throw new _errors.CommandError("BAD_ARGS", "Specify at most one of: --check, --fix");
>>>>>>> 0823204efb84884a0322b43e865bb36631ba8251
    }
    if ([
        options.npm,
        options.pnpm,
        options.yarn,
        options.bun
    ].filter(Boolean).length > 1) {
<<<<<<< HEAD
        throw new _errors.CommandError('BAD_ARGS', 'Specify at most one of: --npm, --pnpm, --yarn, --bun');
=======
        throw new _errors.CommandError("BAD_ARGS", "Specify at most one of: --npm, --pnpm, --yarn, --bun");
>>>>>>> 0823204efb84884a0322b43e865bb36631ba8251
    }
    return {
        ...options
    };
}
async function resolveArgsAsync(argv) {
<<<<<<< HEAD
    const { variadic, extras, flags } = (0, _variadic.parseVariadicArguments)(argv);
    (0, _variadic.assertUnexpectedVariadicFlags)([
        '--check',
        '--dev',
        '--fix',
        '--npm',
        '--pnpm',
        '--yarn',
        '--bun'
=======
    const { variadic , extras , flags  } = (0, _variadic.parseVariadicArguments)(argv);
    (0, _variadic.assertUnexpectedVariadicFlags)([
        "--check",
        "--fix",
        "--npm",
        "--pnpm",
        "--yarn",
        "--bun"
>>>>>>> 0823204efb84884a0322b43e865bb36631ba8251
    ], {
        variadic,
        extras,
        flags
<<<<<<< HEAD
    }, 'npx expo install');
=======
    }, "npx expo install");
>>>>>>> 0823204efb84884a0322b43e865bb36631ba8251
    return {
        // Variadic arguments like `npx expo install react react-dom` -> ['react', 'react-dom']
        variadic,
        options: resolveOptions({
<<<<<<< HEAD
            fix: !!flags['--fix'],
            dev: !!flags['--dev'],
            check: !!flags['--check'],
            yarn: !!flags['--yarn'],
            npm: !!flags['--npm'],
            pnpm: !!flags['--pnpm'],
            bun: !!flags['--bun']
=======
            fix: !!flags["--fix"],
            check: !!flags["--check"],
            yarn: !!flags["--yarn"],
            npm: !!flags["--npm"],
            pnpm: !!flags["--pnpm"],
            bun: !!flags["--bun"]
>>>>>>> 0823204efb84884a0322b43e865bb36631ba8251
        }),
        extras
    };
}

//# sourceMappingURL=resolveOptions.js.map