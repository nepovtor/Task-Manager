"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "FaviconMiddleware", {
    enumerable: true,
<<<<<<< HEAD
    get: function() {
        return FaviconMiddleware;
    }
});
const _ExpoMiddleware = require("./ExpoMiddleware");
const _favicon = require("../../../export/favicon");
const debug = require('debug')('expo:start:server:middleware:favicon');
class FaviconMiddleware extends _ExpoMiddleware.ExpoMiddleware {
    constructor(projectRoot){
        super(projectRoot, [
            '/favicon.ico'
        ]), this.projectRoot = projectRoot;
    }
    async handleRequestAsync(req, res, next) {
        if (![
            'GET',
            'HEAD'
        ].includes(req.method || '')) {
=======
    get: ()=>FaviconMiddleware
});
const _expoMiddleware = require("./ExpoMiddleware");
const _favicon = require("../../../export/favicon");
const debug = require("debug")("expo:start:server:middleware:favicon");
class FaviconMiddleware extends _expoMiddleware.ExpoMiddleware {
    constructor(projectRoot){
        super(projectRoot, [
            "/favicon.ico"
        ]);
        this.projectRoot = projectRoot;
    }
    async handleRequestAsync(req, res, next) {
        if (![
            "GET",
            "HEAD"
        ].includes(req.method || "")) {
>>>>>>> 0823204efb84884a0322b43e865bb36631ba8251
            return next();
        }
        let faviconImageData;
        try {
            const data = await (0, _favicon.getFaviconFromExpoConfigAsync)(this.projectRoot, {
                force: true
            });
            if (!data) {
<<<<<<< HEAD
                debug('No favicon defined in the Expo Config, skipping generation.');
                return next();
            }
            faviconImageData = data.source;
            debug('✅ Generated favicon successfully.');
        } catch (error) {
            // Pass through on ENOENT errors
            debug('Failed to generate favicon from Expo config:', error);
            if (error.code === 'ENOENT') {
                return next();
            }
            return next(error);
        }
        // Respond with the generated favicon file
        res.setHeader('Content-Type', 'image/x-icon');
=======
                debug("No favicon defined in the Expo Config, skipping generation.");
                return next();
            }
            faviconImageData = data.source;
            debug("✅ Generated favicon successfully.");
        } catch (error) {
            debug("Failed to generate favicon from Expo config:", error);
            return next(error);
        }
        // Respond with the generated favicon file
        res.setHeader("Content-Type", "image/x-icon");
>>>>>>> 0823204efb84884a0322b43e865bb36631ba8251
        res.end(faviconImageData);
    }
}

//# sourceMappingURL=FaviconMiddleware.js.map